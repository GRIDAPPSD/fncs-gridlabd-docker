on: [push]

jobs:
  push:
    runs-on: ubuntu-latest
    name: Build and push the docker contianer
    steps:
     #- name: Build image
     #   run: docker build . --build-arg TIMESTAMP="${BUILD_VERSION} --file Dockerfile.gridappsd_base --tag $IMAGE_NAME

      #- name: Log into registry
        #run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login docker.com -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - uses: actions/checkout@v2

      - name: Build and Push image
        run: |

          TAG="${GITHUB_REF##*/}"
          ORG=`echo "${{ secrets.DOCKER_PROJECT }}" | tr '[:upper:]' '[:lower:]'`
          ORG="${ORG:-gridappsd}"
          ORG="${ORG:+${ORG}/}"
          IMAGE="${ORG}gridappsd_base"
          TIMESTAMP=`date +'%y%m%d%H'`
          GITHASH=`git log -1 --pretty=format:"%h"`

          BUILD_VERSION="${TIMESTAMP}_${GITHASH}${TRAVIS_BRANCH:+:$TRAVIS_BRANCH}"
          echo "BUILD_VERSION $BUILD_VERSION"

          ## Strip git ref prefix from version
          #VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          ## Strip "v" prefix from tag name
          #[[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          ## Use Docker `latest` tag convention
          #[ "$VERSION" == "$default-branch" ] && VERSION=latest
          #echo IMAGE_ID=$IMAGE_ID
          #echo VERSION=$VERSION
          #docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          #docker push $IMAGE_ID:$VERSION

          # Pass gridappsd tag to docker-compose
          docker build --no-cache --rm=true --build-arg TIMESTAMP="${BUILD_VERSION}" -f Dockerfile.gridappsd_base -t ${IMAGE}:${TIMESTAMP}_${GITHASH} .
          status=$?
          if [ $status -ne 0 ]; then
            echo "Error: status $status"
            exit 1
          fi
          
          # To have `DOCKER_USERNAME` and `DOCKER_PASSWORD`
          # filled you need to either use `travis`' cli
          # (https://github.com/travis-ci/travis.rb)
          # and then `travis set ..` or go to the travis
          # page of your repository and then change the
          # environment in the settings pannel.
          
          if [ -n "${{ secrets.DOCKER_USERNAME }}" -a -n "${{ secrets.DOCKER_TOKEN }}" ]; then
          
            echo " "
            echo "Connecting to docker"
          
            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            status=$?
            if [ $status -ne 0 ]; then
              echo "Error: status $status"
              exit 1
            fi
          
            if [ -n "$TAG" -a -n "$ORG" ]; then
              # Get the built container name
              CONTAINER=`docker images --format "{{.Repository}}:{{.Tag}}" ${IMAGE}`
          
              echo "docker push ${CONTAINER}"
              docker push "${CONTAINER}"
              status=$?
              if [ $status -ne 0 ]; then
                echo "Error: status $status"
                exit 1
              fi
          
              echo "docker tag ${CONTAINER} ${IMAGE}:$TAG"
              docker tag ${CONTAINER} ${IMAGE}:$TAG
              status=$?
              if [ $status -ne 0 ]; then
                echo "Error: status $status"
                exit 1
              fi
          
              echo "docker push ${IMAGE}:$TAG"
              docker push ${IMAGE}:$TAG
              status=$?
              if [ $status -ne 0 ]; then
                echo "Error: status $status"
                exit 1
              fi
            fi
          
          fi
